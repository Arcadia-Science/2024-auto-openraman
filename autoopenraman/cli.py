import argparse
import sys
from pathlib import Path

from autoopenraman.utils import extract_stage_positions


class CLIparse:
    def __init__(self) -> None:
        parser = argparse.ArgumentParser(description='AutoOpenRaman acquisition',
                                         usage='''autoopenraman <command> [<args>]''')
        parser.add_argument('command', help='Can be one of: live, acq, plot')

        # parse command
        args = parser.parse_args(sys.argv[1:2])
        if not hasattr(self, args.command):
            print('Command {0} not recognized.'.format(args.command))
            parser.print_help()
            exit(1)
        getattr(self, args.command)()

    def live(self):
        print("Live mode")

        from autoopenraman.live import main as live_main
        live_main()
    
    def acq(self):
        print("Acquisition mode")

        # Parse the command line arguments
        parser = argparse.ArgumentParser(description='Acquire images using the AutoOpenRaman acquisition')
        parser.add_argument('-p', '--pos_filepath', type=str, help='Path to the JSON file containing\
                            the stage positions (Generated by Micro-Manager)',
                            default=None, required=False)
        parser.add_argument('-n', '--n_averages', type=int, help='Number of averages for each acquisition',
                            default=1, required=False)
        parser.add_argument('-s', '--save_dir', type=str, help='path to save the spectra',
                            default='data/', required=False)
        args = parser.parse_args(sys.argv[2:])

        if args.pos_filepath:
            xy_positions, labels = extract_stage_positions(args.pos_filepath)
        else:
            xy_positions = None
            labels = None
        
        n_averages = args.n_averages
        
        save_dir = Path(args.save_dir)

        from autoopenraman.acq import main as acq_main
        acq_main(n_averages=n_averages,
                 xy_positions=xy_positions,
                 labels=labels,
                 save_dir=save_dir)
    def plot(self):
        print("Plot mode")

        parser = argparse.ArgumentParser(description="Plot spectrum of CSV file(s) using Plotly.")
        parser.add_argument('-f', '--file_or_dir', type=str, help="Path to a CSV file or a directory of CSV files.", required=True)
        args = parser.parse_args(sys.argv[2:])
        file_or_dir = Path(args.file_or_dir)

        from autoopenraman.plot import main as plot_main
        plot_main(file_or_dir)

def main():
    CLIparse()

if __name__ == "__main__":
    main()
