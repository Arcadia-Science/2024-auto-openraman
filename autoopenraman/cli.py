from pathlib import Path

import click

from autoopenraman.acq import main as acq_main
from autoopenraman.live import main as live_main
from autoopenraman.plot import main as plot_main
from autoopenraman.utils import extract_stage_positions


@click.group()
def cli():
    """AutoOpenRaman acquisition"""
    pass


@cli.command()
def live():
    """Start live mode"""
    click.echo("Live mode")
    live_main()


@cli.command()
@click.option('-p', '--pos-filepath', type=click.Path(exists=True), help="Path to the JSON file containing the stage positions (Generated by Micro-Manager)", default=None)
@click.option('-n', '--n-averages', type=int, help="Number of averages for each acquisition", default=1)
@click.option('-s', '--save-dir', type=click.Path(), help="Path to save the spectra", default='data/')
def acq(pos_filepath, n_averages, save_dir):
    """Start acquisition mode"""
    click.echo("Acquisition mode")

    if pos_filepath:
        xy_positions, labels = extract_stage_positions(pos_filepath)
    else:
        xy_positions = None
        labels = None

    save_dir = Path(save_dir)

    acq_main(n_averages=n_averages,
             xy_positions=xy_positions,
             labels=labels,
             save_dir=save_dir)


@cli.command()
@click.option('-f', '--file-or-dir', type=click.Path(exists=True), help="Path to a CSV file or a directory of CSV files.", required=True)
def plot(file_or_dir):
    """Plot spectrum of CSV file(s)"""
    click.echo("Plot mode")
    file_or_dir = Path(file_or_dir)
    plot_main(file_or_dir)


def main():
    cli()


if __name__ == "__main__":
    main()
